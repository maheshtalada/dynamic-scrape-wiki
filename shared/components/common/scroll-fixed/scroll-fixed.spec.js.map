{"version":3,"sources":["scroll-fixed.spec.jsx"],"names":[],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAI,YAAY,gBAAM,MAAN,CAAa,SAA7B,C,CAH2B;;;YAgCR;;;AA3BnB,SAAS,wBAAT,EAAmC,YAAM;;AAExC,KAAI,YAAY,IAAhB;AAAA,KACC,gBAAgB,IADjB;AAAA,KAEC,cAFD;;AAIA;AACA,KAAI,cAAc,QAAQ,oBAAR,CAAlB;;AAEA,kBAAiB,QAAjB,GAA4B,IAA5B;AACA,kBAAiB,QAAjB,GAA4B,KAA5B;;AAEA,UAAS,cAAT,GAA0B;AACzB,kBAAgB,uBAAa,MAAb,CAAoB,8BAAC,WAAD,EAAiB,KAAjB,CAApB,EAAgD,SAAhD,CAAhB;AACA;;AAED,WAAU,UAAS,IAAT,EAAe;AACxB,yBAAa,eAAb,CAA6B,UAAC,YAAD,EAAkB;AAC9C,eAAY,YAAZ;AACA;AACA,GAHD;AAIA,UAAQ;AACP,mBAAgB,GADT;AAEP,QAAK,GAFE;AAGP,aAAU,GAHH;AAIP,aAAU,QAJH;AAKP,aAAU;AALH,GAAR;AASA,EAdD;;AAgBA,UAAS,eAAT,CAAyB,SAAzB,EAAoC,KAApC,EAA2C;AAC1C,UAAQ,SAAS,IAAjB;AACA,MAAI,QAAQ;AACX,WAAQ;AACP,qCAAU,SAAS,IAAnB;AADO;AADG,GAAZ;AAKA,QAAM,MAAN,CAAa,IAAb,CAAkB,SAAlB,GAA8B,SAA9B;AACA,QAAM,MAAN,CAAa,IAAb,CAAkB,WAAlB,GAAgC,KAAhC;AACA,gBAAc,YAAd,CAA2B,KAA3B;AACA;;AAED,IAAG,yBAAH,EAA8B,YAAM;AACnC;AACA,MAAI,YAAY,UAAU,iCAAV,CAA4C,aAA5C,EAA2D,YAA3D,CAAhB;AACA,SAAO,SAAP,EAAkB,GAAlB,CAAsB,IAAtB,CAA2B,IAA3B;AACA,SAAO,UAAU,KAAV,CAAgB,QAAvB,EAAiC,IAAjC,CAAsC,MAAtC;AACA,EALD;;AAOA,IAAG,4FAAH,EAAiG,YAAM;AACtG;AACA,kBAAgB,GAAhB;AACA,SAAO,cAAc,KAAd,CAAoB,QAA3B,EAAqC,IAArC,CAA0C,IAA1C;AACA,EAJD;;AAMA,IAAG,+EAAH,EAAoF,YAAM;AACzF;AACA,kBAAgB,GAAhB;AACA,SAAO,cAAc,KAAd,CAAoB,QAA3B,EAAqC,IAArC,CAA0C,IAA1C;AACA,kBAAgB,EAAhB;AACA,SAAO,cAAc,KAAd,CAAoB,QAA3B,EAAqC,IAArC,CAA0C,KAA1C;AACA,EAND;;AAQA,IAAG,kFAAH,EAAuF,YAAM;AAC5F;AACA,kBAAgB,GAAhB;AACA,SAAO,cAAc,KAAd,CAAoB,QAA3B,EAAqC,IAArC,CAA0C,KAA1C;AACA,EAJD;;AAMA,IAAG,uDAAH,EAA4D,YAAM;AACjE,QAAM,QAAN,GAAiB,IAAjB;AACA;AACA,kBAAgB,GAAhB;AACA,SAAO,cAAc,KAAd,CAAoB,QAA3B,EAAqC,IAArC,CAA0C,KAA1C;AACA,EALD;AAMA,CA7ED","file":"scroll-fixed.spec.js","sourcesContent":["import React from 'react'; // eslint-disable-line no-unused-vars\nimport jasmineReact from '../../../tests/unit/_jasmine-react.js';\n\nlet TestUtils = React.addons.TestUtils;\n\ndescribe('Scroll Fixed Component', () => {\n\n\tlet container = null,\n\t\ttestComponent = null,\n\t\tprops;\n\n\t// require script in function so it doesn't get cached\n\tlet ScrollFixed = require('./scroll-fixed.jsx');\n\n\tframeworkGlobals.isClient = true;\n\tframeworkGlobals.isServer = false;\n\n\tfunction buildComponent() {\n\t\ttestComponent = jasmineReact.render(<ScrollFixed {...props} />, container);\n\t}\n\n\tbeforeAll(function(done) {\n\t\tjasmineReact.createContainer((newContainer) => {\n\t\t\tcontainer = newContainer;\n\t\t\tdone();\n\t\t});\n\t\tprops = {\n\t\t\tscrollPosition: 100,\n\t\t\ttop: 100,\n\t\t\tminWidth: 100,\n\t\t\tmaxWidth: Infinity,\n\t\t\tchildren: [\n\t\t\t\t<div className=\"test-child\">Test</div>\n\t\t\t]\n\t\t};\n\t});\n\n\tfunction fireScrollEvent(scrollTop, width) {\n\t\twidth = width || 1200;\n\t\tlet event = {\n\t\t\ttarget: {\n\t\t\t\tbody: {...document.body}\n\t\t\t}\n\t\t};\n\t\tevent.target.body.scrollTop = scrollTop;\n\t\tevent.target.body.offsetWidth = width;\n\t\ttestComponent.handleScroll(event);\n\t}\n\n\tit('should contain children', () => {\n\t\tbuildComponent();\n\t\tlet testChild = TestUtils.findRenderedDOMComponentWithClass(testComponent, 'test-child');\n\t\texpect(testChild).not.toBe(null);\n\t\texpect(testChild.props.children).toBe('Test');\n\t});\n\n\tit('should change state to fixed if the window scroll position is greater than the param value', () => {\n\t\tbuildComponent();\n\t\tfireScrollEvent(101);\n\t\texpect(testComponent.state.isActive).toBe(true);\n\t});\n\n\tit('should change state back to relative if the position is less than param value', () => {\n\t\tbuildComponent();\n\t\tfireScrollEvent(101);\n\t\texpect(testComponent.state.isActive).toBe(true);\n\t\tfireScrollEvent(99);\n\t\texpect(testComponent.state.isActive).toBe(false);\n\t});\n\n\tit('should change state back to relative if the position is equal to the param value', () => {\n\t\tbuildComponent();\n\t\tfireScrollEvent(100);\n\t\texpect(testComponent.state.isActive).toBe(false);\n\t});\n\n\tit('should stop being fixed if outside of the width range', () => {\n\t\tprops.maxWidth = 1000;\n\t\tbuildComponent();\n\t\tfireScrollEvent(101);\n\t\texpect(testComponent.state.isActive).toBe(false);\n\t});\n});\n"]}